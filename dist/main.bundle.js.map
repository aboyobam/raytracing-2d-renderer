{"version":3,"file":"main.bundle.js","mappings":";;;;;;;;;;;;AAEA,MAAM,MAAM,GAAc;IACtB,IAAI,EAAE,UAAU;IAChB,KAAK,EAAE,GAAG;IACV,MAAM,EAAE,GAAG;IACX,SAAS,EAAE,KAAK;IAChB,OAAO,EAAE,EAAE;IACX,QAAQ,EAAE;QACN,SAAS,EAAE,CAAC;QACZ,KAAK,EAAE,GAAG;QACV,MAAM,EAAE,GAAG;QACX,SAAS,EAAE,EAAE;QACb,UAAU,EAAE,CAAC;QACb,SAAS,EAAE,IAAI;QACf,SAAS,EAAE,EAAE;KAChB;CACJ;AAED,qBAAe,MAAM,CAAC;;;;;;;UCnBtB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;;;ACtBA,yEAA+B;AAE/B,MAAM,QAAQ,GAAG,IAAI,eAAe,CAAC,gBAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,gBAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACpF,MAAM,WAAW,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC9C,MAAM,SAAS,GAAG,WAAW,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,gBAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,gBAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAEhG,MAAM,UAAU,GAAG,IAAI,iBAAiB,CAAC,gBAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,gBAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAE7F,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAChD,MAAM,CAAC,KAAK,GAAG,gBAAM,CAAC,KAAK,CAAC;AAC5B,MAAM,CAAC,MAAM,GAAG,gBAAM,CAAC,MAAM,CAAC;AAC9B,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACpC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AAElC,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,gBAAM,CAAC,OAAO,EAAE,GAAG,EAAE,EAAE;IAC3C,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,gBAAM,CAAC,IAAI,GAAG,YAAY,CAAC,CAAC;IACtD,MAAM,CAAC,WAAW,CAAC;QACf,GAAG,EAAE,KAAK,EAAE,gBAAM,CAAC,OAAO;QAC1B,MAAM,EAAE,gBAAM,CAAC,QAAQ;QACvB,MAAM,EAAE,UAAU;KACrB,CAAC,CAAC;CACN;AAED,SAAS,IAAI;IACT,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;IAC/C,WAAW,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1C,GAAG,CAAC,qBAAqB,GAAG,gBAAM,CAAC,SAAS,CAAC;IAC7C,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IAC3D,qBAAqB,CAAC,IAAI,CAAC,CAAC;AAChC,CAAC;AAED,qBAAqB,CAAC,IAAI,CAAC,CAAC","sources":["webpack:///./src/config.ts","webpack:///webpack/bootstrap","webpack:///./src/lib/main.ts"],"sourcesContent":["import type AppConfig from \"@/config\";\r\n\r\nconst config: AppConfig = {\r\n    file: 'example3',\r\n    width: 500,\r\n    height: 500,\r\n    smoothing: false,\r\n    threads: 12,\r\n    renderer: {\r\n        wireframe: 0,\r\n        width: 500,\r\n        height: 500,\r\n        cameraFov: 45,\r\n        cameraNear: 2,\r\n        qtEnabled: true,\r\n        qtMaxSize: 24\r\n    }\r\n}\r\n\r\nexport default config;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import config from \"../config\";\r\n\r\nconst renderer = new OffscreenCanvas(config.renderer.width, config.renderer.height);\r\nconst rendererCtx = renderer.getContext(\"2d\");\r\nconst imageData = rendererCtx.getImageData(0, 0, config.renderer.width, config.renderer.height);\r\n\r\nconst viewBuffer = new SharedArrayBuffer(config.renderer.width * config.renderer.height * 4);\r\n\r\nconst canvas = document.createElement(\"canvas\");\r\ncanvas.width = config.width;\r\ncanvas.height = config.height;\r\nconst ctx = canvas.getContext(\"2d\");\r\ndocument.body.appendChild(canvas);\r\n\r\nfor (let mod = 0; mod < config.threads; mod++) {\r\n    const worker = new Worker(config.file + \".bundle.js\");\r\n    worker.postMessage({\r\n        mod, total: config.threads,\r\n        config: config.renderer,\r\n        buffer: viewBuffer\r\n    });\r\n}\r\n\r\nfunction draw() {\r\n    imageData.data.set(new Uint8Array(viewBuffer));\r\n    rendererCtx.putImageData(imageData, 0, 0);\r\n    ctx.imageSmoothingEnabled = config.smoothing;\r\n    ctx.drawImage(renderer, 0, 0, canvas.width, canvas.height);\r\n    requestAnimationFrame(draw);\r\n}\r\n\r\nrequestAnimationFrame(draw);"],"names":[],"sourceRoot":""}