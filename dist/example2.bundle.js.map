{"version":3,"file":"example2.bundle.js","mappings":"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","sources":["webpack:///./src/lib/Camera.ts","webpack:///./src/lib/Face.ts","webpack:///./src/lib/Geometry.ts","webpack:///./src/lib/Material.ts","webpack:///./src/lib/Mesh.ts","webpack:///./src/lib/Raytracer.ts","webpack:///./src/lib/Renderer.ts","webpack:///./src/lib/Scene.ts","webpack:///./src/lib/Vector3.ts","webpack:///./src/lib/geometries/CubeGeometry.ts","webpack:///./src/lib/setup.ts","webpack:///webpack/bootstrap","webpack:///./src/scenes/example2.ts"],"sourcesContent":["import Vector3 from \"./Vector3\";\r\n\r\nexport default class Camera {\r\n    public readonly position = new Vector3(0, 0, 0);\r\n    public readonly target = new Vector3(0, 0, 0);\r\n    public readonly up = new Vector3(0, 1, 0);\r\n\r\n    constructor(public fov: number, public aspectRatio: number, public near: number) {}\r\n}","import Material from \"./Material\";\r\nimport Vector3 from \"./Vector3\";\r\n\r\nexport default class Face {\r\n    constructor(\r\n        public readonly u: Vector3,\r\n        public readonly v: Vector3,\r\n        public readonly w: Vector3,\r\n        public readonly normal: Vector3,\r\n        public readonly material?: Material\r\n    ) {};\r\n\r\n    clone() {\r\n        return new Face(\r\n            this.u.clone(),\r\n            this.v.clone(),\r\n            this.w.clone(),\r\n            this.normal,\r\n            this.material\r\n        );\r\n    }\r\n\r\n    translate(v: Vector3) {\r\n        for (const s of this) {\r\n            for (const d of 'xyz') {\r\n                // @ts-ignore\r\n                s[d] += v[d]; \r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield this.u;\r\n        yield this.v;\r\n        yield this.w;\r\n    }\r\n}","import Face from \"./Face\";\r\nimport Vector3 from \"./Vector3\";\r\n\r\nexport default class Geometry {\r\n    constructor(public readonly vertecies: Vector3[], public readonly faces: Face[]) {}\r\n}","export default class Material {\r\n    constructor(public r = 256, public g = 256, public b = 256, public a = 256) {};\r\n}","import Geometry from \"./Geometry\";\r\nimport Material from \"./Material\";\r\nimport Vector3 from \"./Vector3\";\r\n\r\nexport default class Mesh {\r\n    constructor(public readonly geometry: Geometry, public readonly material: Material) {};\r\n\r\n    public readonly position = new Vector3(0, 0, 0);\r\n    public readonly children: Mesh[] = [];\r\n    private parent?: Mesh;\r\n\r\n    add(mesh: Mesh) {\r\n        mesh.parent = this;\r\n        this.children.push(mesh);\r\n    }\r\n\r\n    attach(mesh: Mesh) {\r\n        this.add(mesh);\r\n        for (const child of mesh) {\r\n            child.position.sub(this.position);\r\n        }\r\n    }\r\n\r\n    rotate(axis: Vector3, angle: number): void {\r\n        const radians = angle * (Math.PI / 180);\r\n        const cos = Math.cos(radians);\r\n        const sin = Math.sin(radians);\r\n        const { x: u, y: v, z: w } = axis.norm();\r\n    \r\n        const applyRotation = (vertex: Vector3) => {\r\n            const rotatedX = vertex.x * (cos + u * u * (1 - cos))\r\n                            + vertex.y * (u * v * (1 - cos) - w * sin)\r\n                            + vertex.z * (u * w * (1 - cos) + v * sin);\r\n                            \r\n            const rotatedY = vertex.x * (v * u * (1 - cos) + w * sin)\r\n                            + vertex.y * (cos + v * v * (1 - cos))\r\n                            + vertex.z * (v * w * (1 - cos) - u * sin);\r\n    \r\n            const rotatedZ = vertex.x * (w * u * (1 - cos) - v * sin)\r\n                            + vertex.y * (w * v * (1 - cos) + u * sin)\r\n                            + vertex.z * (cos + w * w * (1 - cos));\r\n    \r\n            vertex.x = rotatedX;\r\n            vertex.y = rotatedY;\r\n            vertex.z = rotatedZ;\r\n        };\r\n    \r\n        this.geometry.vertecies.forEach(applyRotation);\r\n        this.geometry.faces.forEach(face => applyRotation(face.normal));\r\n    }\r\n\r\n    *[Symbol.iterator](): IterableIterator<Mesh> {\r\n        yield this;\r\n        for (const child of this.children) {\r\n            yield* child;\r\n        }\r\n    }\r\n\r\n    get worldPosition(): Vector3 {\r\n        if (this.parent) {\r\n            return this.parent.worldPosition.add(this.position);\r\n        } else {\r\n            return this.position;\r\n        }\r\n    }\r\n}","import Face from \"./Face\";\r\nimport Mesh from \"./Mesh\";\r\nimport Scene from \"./Scene\";\r\nimport Vector3 from \"./Vector3\";\r\n\r\nexport default class Raytracer {\r\n    static readonly EPSILON = 1e-7\r\n    constructor(private readonly scene: Scene, public readonly origin: Vector3) {};\r\n\r\n    *castRay(dir: Vector3): IterableIterator<Intersection> {\r\n        // Möller–Trumbore\r\n\r\n        for (const mesh of this.scene) {\r\n            for (const origFace of mesh.geometry.faces) {\r\n                const face = origFace.clone().translate(mesh.worldPosition);\r\n\r\n                const edge1 = face.v.sub(face.u);\r\n                const edge2 = face.w.sub(face.u);\r\n                const h = dir.cross(edge2);\r\n                const a = edge1.dot(h);\r\n                \r\n                if (a > -Raytracer.EPSILON && a < Raytracer.EPSILON) {\r\n                    continue;\r\n                }\r\n\r\n                const f = 1.0 / a;\r\n                const s = this.origin.sub(face.u);\r\n                const u = f * s.dot(h);\r\n                if (u < 0.0 || u > 1.0) {\r\n                    continue;\r\n                }\r\n                    \r\n                const q = s.cross(edge1);\r\n                const v = f * dir.dot(q);\r\n                if (v < 0.0 || u + v > 1.0) {\r\n                    continue;\r\n                }\r\n\r\n                const t = f * edge2.dot(q);\r\n                if (t > Raytracer.EPSILON) {\r\n                    const point = this.origin.add(dir.multScalar(t));\r\n                    const dotProduct = dir.dot(face.normal);\r\n                    const clampedDotProduct = Math.max(-1, Math.min(1, dotProduct));\r\n                    const angle = Math.acos(clampedDotProduct) * (180 / Math.PI);\r\n                    const distance = this.origin.sub(point).len();\r\n\r\n                    const dist1 = this.distancePointToSegment(point, face.u, face.v);\r\n                    const dist2 = this.distancePointToSegment(point, face.v, face.w);\r\n                    const dist3 = this.distancePointToSegment(point, face.w, face.u);\r\n                    const edgeDist = Math.min(dist1, dist2, dist3);\r\n\r\n                    yield { angle, point, distance, mesh, face, edgeDist };\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private distancePointToSegment(point: Vector3, a: Vector3, b: Vector3): number {\r\n        const ab = b.sub(a);\r\n        const ap = point.sub(a);\r\n        const bp = point.sub(b);\r\n        const e = ap.dot(ab);\r\n        \r\n        if (e <= 0) {\r\n            return ap.len();\r\n        }\r\n\r\n        const f = ab.dot(ab);\r\n        if (e >= f) {\r\n            return bp.len();\r\n        }\r\n    \r\n        return Math.sqrt(ap.dot(ap) - (e * e) / f);\r\n    }\r\n}\r\n\r\nexport interface Intersection {\r\n    angle: number;\r\n    point: Vector3;\r\n    distance: number;\r\n    mesh: Mesh;\r\n    face: Face;\r\n    edgeDist: number;\r\n}","import Camera from \"./Camera\";\r\nimport Material from \"./Material\";\r\nimport Raytracer from \"./Raytracer\";\r\nimport Scene from \"./Scene\";\r\nimport AppConfig from \"./config\";\r\n\r\nexport default class Renderer {\r\n    private readonly renderer: OffscreenCanvas;\r\n    private readonly imageData: ImageData;\r\n    private needsUpdate = false;\r\n    private readonly pixels: Uint8ClampedArray;\r\n\r\n    constructor(\r\n        public readonly config: AppConfig['renderer'],\r\n        public readonly buffer: SharedArrayBuffer,\r\n        public readonly mod: number,\r\n        public readonly total: number\r\n    ) {\r\n        this.renderer = new OffscreenCanvas(config.width, config.height);\r\n        this.imageData = this.renderer.getContext(\"2d\").getImageData(0, 0, config.width, config.height);\r\n        const sharedUint8Array = new Uint8ClampedArray(buffer);\r\n        sharedUint8Array.set(this.imageData.data);\r\n        this.pixels = sharedUint8Array;\r\n    }\r\n\r\n    // private get pixels() {\r\n    //     return this.imageData.data;\r\n    // }\r\n\r\n    setPixel(x: number, y: number, r: number, g: number, b: number, a = 256) {\r\n        const index = (y * this.config.width + x) * 4;\r\n        const pixels = this.pixels;\r\n\r\n        pixels[index + 0] = r;\r\n        pixels[index + 1] = g;\r\n        pixels[index + 2] = b;\r\n        pixels[index + 3] = a;\r\n        this.needsUpdate = true;\r\n    }\r\n\r\n    render(camera: Camera, scene: Scene) {\r\n        this.pixels.fill(256);\r\n\r\n        const planeHeight = 2 * Math.tan((camera.fov / 2) * (Math.PI / 180)) * camera.near;\r\n        const planeWidth = planeHeight * camera.aspectRatio;\r\n\r\n        const forward = camera.target.norm(); \r\n        const right = camera.up.cross(forward).norm();\r\n        const up = forward.cross(right).norm(); \r\n        const center = camera.position.add(forward.multScalar(camera.near));\r\n        const halfUp = up.multScalar(planeHeight / 2);\r\n        const halfRight = right.multScalar(planeWidth / 2);\r\n\r\n        const topLeft = center.add(halfUp).sub(halfRight);\r\n        const topRight = center.add(halfUp).add(halfRight);\r\n        const bottomLeft = center.sub(halfUp).sub(halfRight);\r\n\r\n        const xStep = topRight.sub(topLeft).multScalar(1 / this.config.width);\r\n        const yStep = bottomLeft.sub(topLeft).multScalar(1 / this.config.height);\r\n        \r\n        const rc = new Raytracer(scene, camera.position);\r\n\r\n        for (let y = this.mod; y < this.config.height; y += this.total) {\r\n            for (let x = 0; x < this.config.width; x++) {\r\n                const dir = topLeft\r\n                    .add(xStep.multScalar(x))\r\n                    .add(yStep.multScalar(y))\r\n                    .sub(camera.position)\r\n                    .norm();\r\n\r\n                const hits = Array.from(rc.castRay(dir));\r\n                \r\n                if (!hits.length) {\r\n                    continue;\r\n                }\r\n\r\n                if (this.config.wireframe) {\r\n                    for (const hit of hits) {\r\n                        if (hit.edgeDist < this.config.wireframe) {\r\n                            const { r, g, b } = hit.face.material ?? hit.mesh.material;\r\n                            this.setPixel(x, y, r, g, b);\r\n                        }\r\n                    }\r\n                } else {\r\n                    const sorted = hits.sort((a, b) => a.distance - b.distance);\r\n\r\n                    let strength = 0;\r\n                    const colors: [Material, number, number][] = [];\r\n\r\n                    for (const hit of sorted) {\r\n                        const localAlpha = (hit.face.material ?? hit.mesh.material).a / 256;\r\n                        const localStrength = (1 - strength) * localAlpha;\r\n                        strength += localStrength;\r\n                        colors.push([(hit.face.material ?? hit.mesh.material), localStrength, hit.angle / 180]);\r\n\r\n                        if (strength > 0.999) {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    const { r, g, b, a }: Material = colors.reduce((acc, [{ r, g, b, a }, s, q]) => {\r\n                        acc.r += r * q * s; \r\n                        acc.g += g * q * s; \r\n                        acc.b += b * q * s; \r\n                        acc.a += s * 256;\r\n                        return acc;\r\n                    }, new Material(0, 0, 0, 0));\r\n                    \r\n                    this.setPixel(x, y, r, g, b);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import Mesh from \"./Mesh\";\r\n\r\nexport default class Scene {\r\n    public readonly meshes: Mesh[] = [];\r\n\r\n    add(...objs: Mesh[]) {\r\n        this.meshes.push(...objs);\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        for (const mesh of this.meshes) {\r\n            yield* mesh;\r\n        }\r\n    }\r\n}","export default class Vector3 {\r\n    constructor(public x: number = 0, public y: number = 0, public z: number = 0) {};\r\n\r\n    set(x: number, y: number, z: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    clone() {\r\n        return new Vector3(this.x, this.y, this.z);\r\n    }\r\n\r\n    add(v: Vector3) {\r\n        return new Vector3(this.x + v.x, this.y + v.y, this.z + v.z);\r\n    }\r\n\r\n    sub(v: Vector3) {\r\n        return new Vector3(this.x - v.x, this.y - v.y, this.z - v.z);\r\n    }\r\n\r\n\r\n    mult(v: Vector3) {\r\n        return new Vector3(this.x * v.x, this.y * v.y, this.z * v.z);\r\n    }\r\n\r\n    multScalar(s: number) {\r\n        return new Vector3(this.x * s, this.y * s, this.z * s);\r\n    }\r\n\r\n    lenSq() {\r\n        return this.x ** 2 + this.y ** 2 + this.z ** 2;\r\n    }\r\n\r\n    len() {\r\n        return Math.sqrt(this.lenSq());\r\n    }\r\n\r\n    dot(v: Vector3) {\r\n        return this.x * v.x + this.y * v.y + this.z * v.z;\r\n    }\r\n    \r\n    cross(v: Vector3) {\r\n        const x = this.y * v.z - this.z * v.y;\r\n        const y = this.z * v.x - this.x * v.z;\r\n        const z = this.x * v.y - this.y * v.x;\r\n        return new Vector3(x, y, z);\r\n    }\r\n\r\n    norm() {\r\n        const length = this.len();\r\n        if (length === 0) return new Vector3();\r\n\r\n        if (length === 1) {\r\n            return this.clone();\r\n        }\r\n        \r\n        return new Vector3(this.x / length, this.y / length, this.z / length);\r\n    }\r\n}","import Face from \"../Face\";\r\nimport Geometry from \"../Geometry\";\r\nimport Vector3 from \"../Vector3\";\r\n\r\nexport default class CubeGeometry extends Geometry {\r\n    constructor(public readonly width: number, public readonly height: number, public readonly depth: number) {\r\n        const vertecies: Vector3[] = [];\r\n        \r\n        for (const x of [-0.5, 0.5]) {\r\n            for (const y of [-0.5, 0.5]) {\r\n                for (const z of [-0.5, 0.5]) {\r\n                    vertecies.push(new Vector3(width * x, height * y, depth * z));\r\n                }\r\n            }\r\n        }\r\n        \r\n        super(vertecies, [\r\n            new Face(vertecies[0], vertecies[1], vertecies[4], new Vector3(0, -1, 0)), new Face(vertecies[1], vertecies[4], vertecies[5], new Vector3(0, -1, 0)), // bottom\r\n            new Face(vertecies[2], vertecies[3], vertecies[6], new Vector3(0, 1, 0)), new Face(vertecies[3], vertecies[6], vertecies[7], new Vector3(0, 1, 0)), // top\r\n            new Face(vertecies[0], vertecies[1], vertecies[2], new Vector3(-1, 0, 0)), new Face(vertecies[1], vertecies[2], vertecies[3], new Vector3(-1, 0, 0)), // left\r\n            new Face(vertecies[4], vertecies[5], vertecies[6], new Vector3(1, 0, 0)), new Face(vertecies[5], vertecies[6], vertecies[7], new Vector3(1, 0, 0)), // right\r\n            new Face(vertecies[0], vertecies[2], vertecies[4], new Vector3(0, 0, -1)), new Face(vertecies[2], vertecies[4], vertecies[6], new Vector3(0, 0, -1)), // front\r\n            new Face(vertecies[1], vertecies[3], vertecies[5], new Vector3(0, 0, 1)), new Face(vertecies[3], vertecies[5], vertecies[7], new Vector3(0, 0, 1)), // back\r\n        ]);\r\n    }\r\n}","import Camera from \"./Camera\";\r\nimport Renderer from \"./Renderer\";\r\nimport Scene from \"./Scene\";\r\nimport AppConfig from \"./config\";\r\n\r\nlet _buildScene: (context: SetupContext) => void | Promise<void>;\r\nlet _data: {\r\n    mod: number;\r\n    total: number;\r\n    config: AppConfig['renderer'];\r\n    buffer: SharedArrayBuffer;\r\n};\r\n\r\nself.onmessage = ({ data }) => {\r\n    _data = data;\r\n    if (_buildScene) {\r\n        doSetup();\r\n    }\r\n}\r\n\r\nexport default function setup(buildScene: typeof _buildScene) {\r\n    _buildScene = buildScene;\r\n\r\n    if (_data) {\r\n        doSetup();\r\n    }\r\n}\r\n\r\nasync function doSetup() {\r\n    const scene = new Scene();\r\n    const renderer = new Renderer(_data.config, _data.buffer, _data.mod, _data.total);\r\n    const camera = new Camera(_data.config.cameraFov, renderer.config.width / renderer.config.height, _data.config.cameraNear);\r\n\r\n    await _buildScene({ scene, camera, renderer });\r\n\r\n    renderer.render(camera, scene);\r\n    self.close();\r\n}\r\n\r\ninterface SetupContext {\r\n    scene: Scene;\r\n    camera: Camera;\r\n    renderer: Renderer;\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import Material from \"@/Material\";\r\nimport Mesh from \"@/Mesh\";\r\nimport Vector3 from \"@/Vector3\";\r\nimport CubeGeometry from \"@/geometries/CubeGeometry\";\r\nimport setup from \"@/setup\";\r\n\r\nsetup(({ scene, camera, renderer }) => {\r\n    const geo = new CubeGeometry(10, 10, 10);\r\n    const mat = new Material();\r\n    const mesh = new Mesh(geo, mat);\r\n    mesh.position.set(0, 0, 30);\r\n    scene.add(mesh);\r\n    camera.target.set(0, 0, 1);\r\n    \r\n    setInterval(() => {\r\n        mesh.rotate(new Vector3(0, 1, 0), 10);\r\n        renderer.render(camera, scene);\r\n    }, 200);\r\n});"],"names":[],"sourceRoot":""}